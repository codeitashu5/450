
	// Function to find maximum product subarray
********************************************************
	long long maxProduct(int *arr, int n) {
	    // code here
	    long long pos_max,neg_max;
	    pos_max = neg_max = 0;
	    long long max = arr[0];
	    bool p,ne;
	    p=ne=false;
	   
	   for(int i=0;i<n;i++){
	       long long ele = arr[i];
	       if(arr[i]>0){
	           
	         if(p==false && ne==false){
	             pos_max = arr[i];
	             if(pos_max>max)
	               max = pos_max;
	               
	             p=true;
	         }
	         else if(p==true && ne==true){
	             pos_max = pos_max*ele;
	             neg_max = neg_max*ele;
	             
	             if(pos_max>max)
	              max = pos_max;
	         }
	         else if(p==true){
	             pos_max = arr[i]*pos_max;
	             if(pos_max>max){
	                 max = pos_max;
	             }
	         }
	         else{
	             neg_max = arr[i]*neg_max;
	             pos_max = arr[i];
	             
	             if(max<pos_max)
	               max = pos_max;
	               
	            p = true;
	               
	         }
	         
	         
	       }
	       else if(arr[i]<0){
	           
	          //code for the negetive one 
	           if(p==false && ne==false){
	            neg_max = arr[i];
	             if(neg_max>max)
	               max = neg_max;
	               
	             ne=true;
	         }
	         else if(p==true && ne==true){
	             
	            long long pos_max_p = pos_max;
	             
	             pos_max = neg_max*arr[i];
	             neg_max = pos_max_p*arr[i];
	             
	             
	             if(pos_max>max)
	              max = pos_max;
	         }
	         else if(p==true){
	             neg_max = arr[i]*pos_max;
	  
	             if(neg_max>max){
	                 max = neg_max;
	             }
	             
	             ne = true;
	             p = false;
	         }
	         else{
	             pos_max = arr[i]*neg_max;
	             neg_max = arr[i];
	             
	             if(max<pos_max)
	               max = pos_max;
	               
	            p = true;
	               
	         }
	           
	       }
	       else{
	          ne=false;
	          p=false;
	       }
	 
	   }

	   return max;
	   
	}